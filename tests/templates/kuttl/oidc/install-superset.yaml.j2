# $NAMESPACE will be replaced with the namespace of the test case.
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-credentials
type: Opaque
stringData:
  adminUser.username: admin
  adminUser.firstname: Superset
  adminUser.lastname: Admin
  adminUser.email: admin@superset.com
  adminUser.password: admin
  connections.secretKey: aQC11KVUJ3yTVcy2
  connections.sqlalchemyDatabaseUri: postgresql://superset:superset@superset-postgresql/superset
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-keycloak1-client
stringData:
  clientId: superset1
  clientSecret: R1bxHUD569vHeQdw
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-keycloak2-client
stringData:
  clientId: superset2
  clientSecret: scWzh0D4v0GN8NrN
---
apiVersion: superset.stackable.tech/v1alpha1
kind: SupersetCluster
metadata:
  name: superset
spec:
  image:
    productVersion: "{{ test_scenario['values']['superset'] }}"
    pullPolicy: IfNotPresent
  clusterConfig:
    authentication:
      - authenticationClass: keycloak1-$NAMESPACE
        oidc:
          clientCredentialsSecret: superset-keycloak1-client
      - authenticationClass: keycloak2-$NAMESPACE
        oidc:
          clientCredentialsSecret: superset-keycloak2-client
    credentialsSecret: superset-credentials
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
    vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  nodes:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
    roleGroups:
      default:
        replicas: 1
